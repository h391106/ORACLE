SELECT INST_ID,　COUNT(*)
FROM GV$SESSION
WHERE TYPE = 'USER'
AND USERNAME NOT IN ('SYS', 'DBSNMP')
GROUP BY INST_ID;

SET LINESIZE 200
COL MACHINE FOR A40
COL PROGRAM FOR A40
COL MODULE FOR A40
COL SERVICE_NAME FOR A20
COL USERNAME FOR A20

SELECT INST_ID, MACHINE,PROGRAM, MODULE, SERVICE_NAME, USERNAME, COUNT(*)
FROM GV$SESSION
WHERE TYPE = 'USER'
AND INST_ID = 6
AND USERNAME NOT IN ('SYS', 'DBSNMP')
GROUP BY INST_ID, MACHINE,PROGRAM, MODULE, SERVICE_NAME, USERNAME ;

-- Sessions group by service name
COL INST_ID FOR 999999
COL SERVICE_NAME FOR A20
COL CNT FOR 9999
SELECT INST_ID, SERVICE_NAME, COUNT(*) CNT
FROM GV$SESSION
WHERE TYPE = 'USER'
AND SERVICE_NAME NOT IN ('SYS$USERS')
GROUP BY INST_ID, SERVICE_NAME
ORDER BY INST_ID, SERVICE_NAME;

-- Machines
SELECT MACHINE, USERNAME,　COUNT(*)
FROM GV$SESSION
WHERE TYPE = 'USER'
AND USERNAME NOT IN ('SYS', 'DBSNMP')
-- AND INST_ID = 6
--AND MACHINE NOT LIKE 'dtrpl%'
GROUP BY MACHINE, USERNAME;

-- Check the PDB status
COL INST_ID FOR 99999
COL NAME FOR A20
COL OPEN_MODE FOR A20
SELECT INST_ID, NAME, OPEN_MODE
FROM GV$PDBS
WHERE NAME NOT IN ('PDB$SEED')
ORDER BY INST_ID;

-- Free tablespace
SELECT 
DDF.TABLESPACE_NAME, 
TRUNC(SUM(DFS.BYTES)/1024/1024/1024, 2) FREE_GB, 
DDF.ALLOC_GB
FROM
(SELECT TABLESPACE_NAME, 
TRUNC(SUM(BYTES)/1024/1024/1024, 2) ALLOC_GB
FROM DBA_DATA_FILES
WHERE TABLESPACE_NAME = 'SYSAUX'
GROUP BY TABLESPACE_NAME) DDF, DBA_FREE_SPACE DFS
WHERE DDF.TABLESPACE_NAME = DFS.TABLESPACE_NAME
GROUP BY DDF.TABLESPACE_NAME, DDF.ALLOC_GB;


-- DBA_JOBS

SELECT LOG_USER, JOB, WHAT
FROM DBA_JOBS
ORDER BY LOG_USER;


-- DBA_SCHEDULER_JOBS

SELECT OWNER, JOB_NAME
FROM DBA_SCHEDULER_JOBS
WHERE OWNER NOT IN ('SYS')
ORDER BY OWNER;

-- Materialized view
SET LINESIZE 150
COL OWNER FOR A10
COL MVIEW_NAME FOR A30
COL REFRESH_MODE FOR A20
COL REFRESH_METHOD FOR A20
SELECT OWNER, MVIEW_NAME, REFRESH_MODE, REFRESH_METHOD
FROM DBA_MVIEWS;

#1
OWNER	   MVIEW_NAME			  REFRESH_MODE	       REFRESH_METHOD
---------- ------------------------------ -------------------- --------------------
ZEON	   M_GAITEI_BANGUMI_HOSOKU_CD	  DEMAND	       FAST
ZEON	   M_GRADE_CD			  DEMAND	       FAST
ZEON	   M_KAKESHIKI			  DEMAND	       FAST
ZEON	   M_KAKESHIKI_SHURUI		  DEMAND	       COMPLETE
ZEON	   M_KYOGIJO			  DEMAND	       FAST
ZEON	   M_MARUME_TYPE		  DEMAND	       FAST
ZEON	   M_SEKOSHA_CD 		  DEMAND	       FAST

#2
ZEON	   M_YUBIN_NO			  DEMAND	       COMPLETE
ZEON	   M_OEM_KAKESHIKI		  DEMAND	       FAST
ZEON	   M_TEST			  DEMAND	       FAST
ZEON	   MV_KAISAI_INFO		  COMMIT	       FORCE
ZEON	   MV_KAISAI_RACE_INFO		  COMMIT	       FORCE

#3
ZEON	   M_MARUME_TYPE		  DEMAND	       FAST
ZEON	   M_SEKOSHA_CD 		  DEMAND	       FAST
ZEON	   M_SESNHU			  DEMAND	       FAST
ZEON	   M_SHABAN_STATUS		  DEMAND	       FAST
ZEON	   M_GINKO			  DEMAND	       FORCE
ZEON	   M_KAKESHIKI_SHURUI		  DEMAND	       COMPLETE
ZEON	   M_YUBIN_NO			  DEMAND	       COMPLETE
ZEON	   M_GAITEI_BANGUMI_HOSOKU_CD	  DEMAND	       FAST
ZEON	   M_GRADE_CD			  DEMAND	       FAST
ZEON	   M_KAKESHIKI			  DEMAND	       FAST
ZEON	   M_KYOGIJO			  DEMAND	       FAST

# 4
ZEON	   M_SHAKEN_SALE_PLACE		  DEMAND	       FAST
ZEON	   M_SHAKEN_SALE_TERMINAL	  DEMAND	       FORCE
ZEON	   M_SHAKEN_SALE_PLACE_TYPE	  DEMAND	       FAST

# 5 
ZEON	   M_SYS_SHABAN_COLOR		  DEMAND	       FAST
ZEON	   M_SHAKEN_SALE_TERMINAL	  DEMAND	       FORCE
ZEON	   M_GRADE_CD			  DEMAND	       FAST
ZEON	   M_KAKESHIKI_KUMIBAN		  DEMAND	       FAST
ZEON	   M_KAKESHIKI			  DEMAND	       FAST
ZEON	   M_KYOGIJO			  DEMAND	       FAST
ZEON	   M_MARUME_TYPE		  DEMAND	       FAST
ZEON	   M_OEM_AUTORACE_KAKESHIKI	  DEMAND	       FAST
ZEON	   M_RACE_STATUS		  DEMAND	       FAST
ZEON	   M_SEKOSHA_CD 		  DEMAND	       FAST
ZEON	   M_SHABAN_STATUS		  DEMAND	       FAST


-- 
SELECT MIN(SAMPLE_TIME) FROM V$ACTIVE_SESSION_HISTORY;

SELECT SAMPLE_ID, SAMPLE_TIME
FROM V$ACTIVE_SESSION_HISTORY
WHERE SAMPLE_TIME BETWEEN TO_DATE('20220604 19:00','YYYYMMDD HH24:MI') AND TO_DATE('20220604 23:00','YYYYMMDD HH24:MI');

DESC DBA_HIST_ACTIVE_SESS_HISTORY

--
SELECT MIN(SAMPLE_ID), MAX(SAMPLE_ID)
FROM DBA_HIST_ACTIVE_SESS_HISTORY
WHERE SAMPLE_TIME BETWEEN TO_DATE('20220604 19:00','YYYYMMDD HH24:MI') AND TO_DATE('20220604 23:00','YYYYMMDD HH24:MI');

--
SELECT INSTANCE_NUMBER, SAMPLE_TIME
FROM DBA_HIST_ACTIVE_SESS_HISTORY
WHERE SAMPLE_ID BETWEEN 46305881 AND 46422837
AND INSTANCE_NUMBER = 1
ORDER BY SAMPLE_TIME ASC;